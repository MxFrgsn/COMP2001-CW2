# swagger.yml
openapi: 3.0.0
info:
  title: 'CW2 Coursework'
  description: 'Trail Service Microservice'
  version: '1.0.1'

servers:
 - url: '/api' # base path for all endpoints
   description: 'Local server'
  
components:
  schemas:
    Trail:
      type: object
      properties:
        trail_name:
          type: string
          description: 'Name of the trail'
          minLength: 5
          maxLength: 255
        difficulty:
          type: string
          description: 'Difficulty level of the trail'
          enum:
            - easy
            - moderate
            - hard
        length:
          type: number
          format: float
          description: 'Length of the trail in kilometers'
          minimum: 0.0
          maximum: 99999.99
        traffic:
          type: string
          description: 'Expected traffic on the trail'
          enum:
            - light
            - moderate
            - heavy
        duration:
          type: string
          description: 'Approximate duration to complete the trail'
          pattern: '^\d{2}:\d{2}$'
        elevation_gain:
          type: integer
          description: 'Elevation gain in meters'
          minimum: 0
          maximum: 9999
        route_type:
          type: string
          description: 'Type of route, e.g., loop, out-and-back, etc.'
          enum:
            - loop
            - out and back
            - point to point
        summary:
          type: string
          description: 'Short summary of the trail'
          minLength: 10
          maxLength: 255
          nullable: true
        description:
          type: string
          description: 'Detailed description of the trail'
          minLength: 100
          maxLength: 1500
          nullable: true
        owner_id:
          type: integer
          description: 'Unique identifier of the trail owner'
        location:
          type: string
          description: 'Location of the trail'
          maxLength: 255
    User:
      type: object
      properties:
        username:
          type: string
          description: 'Username of the user'
          minLength: 3
          maxLength: 255
        email:
          type: string
          format: email
          description: 'Email address of the user'
          maxLength: 255
        password:
          type: string
          description: 'Password of the user'
          minLength: 8
          maxLength: 255
        role:
          type: string
          description: 'Role of the user'
          enum:
            - admin
            - user
    TrailAttraction:
      type: object
      required:
        - trail_id
        - attraction_id
      properties:
        trail_id:
          type: integer
          description: 'Unique identifier of the trail'
        attraction_id:
          type: integer
          description: 'Unique identifier of the attraction'
    Attraction:
      type: object
      required:
        - attraction_name
      properties:
        attraction_name:
          type: string
          description: 'Name of the attraction'
          minLength: 3
          maxLength: 255
    LocationPoint:
      type: object
      properties:
        latitude:
          type: number
          format: float
          description: 'Latitude of the location point'
          minimum: -90.0
          maximum: 90.0
        longitude:
          type: number
          format: float
          description: 'Longitude of the location point'
          minimum: -180.0
          maximum: 180.0
        description:
          type: string
          description: 'Description of the location point'
          minLength: 3
          maxLength: 255
    Trail_locationpt:
      type: object
      properties:
        trail_id:
          type: integer
          description: 'Unique identifier of the trail'
        location_point_id:
          type: integer
          description: 'Unique identifier of the location point'
        order_number:
          type: integer
          description: 'Order number of the location point in the trail'
          minimum: 1
          maximum: 999
    User_Authentication:
      type: object
      required:
        - email
        - password
      properties: 
        email:
          type: string
          description: 'Username of the user'
          maxLength: 255
        password:
          type: string
          description: 'Password of the user'
          minLength: 8
          maxLength: 255
    order_number:
      type: object
      properties:
        order_number:
          type: integer
          description: Order number for the trail location point
      required:
        - order_number
  parameters:
    trail_id:
      name: 'trail_id'
      in: 'path'
      description: 'Unique identifier of the trail to search for'
      required: true
      schema:
        type: integer
    user_id:
      name: 'user_id'
      in: 'path'
      description: 'Unique identifier of the user to search for'
      required: true
      schema:
        type: integer
    attraction_id:
      name: 'attraction_id'
      in: 'path'
      description: 'Unique identifier of the attraction to search for'
      required: true
      schema:
        type: integer
    location_point_id:
      name: 'location_point_id'
      in: 'path'
      description: 'Unique identifier of the location point to search for'
      required: true
      schema:
        type: integer
    name:
      name: 'name'
      in: 'query'
      description: 'Filter by name'
      required: false
      schema:
        type: string
paths:
  /trails:
    get:
      operationId: 'trail.read_all'
      tags:
        - 'trails'
      summary: Get a list of trails
      parameters:
       - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: Successfully retrieved list of trails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trail'
        '400':
          description: Request failed, please retry.
    post:
      operationId: 'trail.create' 
      tags:
        - 'trails'
      summary: Create a new trail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        '201':
          description: Trail created successfully
        '400':
          description: Request failed, please retry.
  /trails/{trail_id}:
    get:
      operationId: 'trail.read_one'
      tags:
        - 'trails'
      summary: Get one trail by ID
      parameters:
        - $ref: '#/components/parameters/trail_id'
      responses:
        '200':
          description: Successful response, Trail exists
        '404':
          description: Trail not found
    delete:
      operationId: 'trail.delete'
      tags:
        - 'trails'
      summary: Delete a trail by ID
      parameters:
        - $ref: '#/components/parameters/trail_id'
      responses:
        '204':
          description: Trail deleted successfully
        '404':
          description: Trail not found
    patch:
      operationId: 'trail.update'
      tags:
        - 'trails'
      summary: Update a trail by ID 
      parameters:
        - $ref: '#/components/parameters/trail_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        '200':
          description: Trail updated successfully
        '404':
          description: Trail not found
  /authenicate:
    post: 
      operationId: 'user.authentication'
      tags:
        - 'users'
      summary: Logins a user using univeristy auth API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_Authentication'
      responses:
        '200':
          description: User logged in successfully
        '404':
          description: User not found
        '204':
          description: User authenticated successfully
  /users:
    get:
      operationId: 'user.read_all'
      tags:
        - 'users'
      summary: Get a list of users
      parameters:
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: Successfully retrieved list of users
        '400':
          description:  Request failed, please retry.
    post:
      operationId: 'user.create'
      tags:
        - 'users'
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Request failed, please retry.
  /users/{user_id}:
    get:
      operationId: 'user.read_one'
      tags:
        - 'users'
      summary: Get one user by ID
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: Successful response, User exists
        '404':
          description: User not found
    delete:
      operationId: 'user.delete'
      tags:
        - 'users'
      summary: Delete a user by ID
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
    patch:
      operationId: 'user.update'
      tags:
        - 'users'
      summary: Update a user by ID
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
  /trail_attraction: 
    get:
      operationId: 'trail_attraction.read_all'
      tags:
        - 'trail_attraction'
      summary: Get a list of trail attractions
      responses:
        '200':
          description: Successfully retrieved list of trail attractions
        '400':
          description: Request failed, please retry.
    post:
      operationId: 'trail_attraction.create'
      tags:
        - 'trail_attraction'
      summary: Create a new trail attraction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrailAttraction'
      responses:
        '201':
          description: Trail attraction created successfully
        '400':
          description: Request failed, please retry.
  /trail_attraction/{trail_id}/{attraction_id}:
    delete:
      operationId: 'trail_attraction.delete'
      tags:
        - 'trail_attraction'
      summary: 'Delete one attraction tied to a trail'
      parameters:
       - $ref: '#/components/parameters/trail_id'
       - $ref: '#/components/parameters/attraction_id'
      responses:
        '204':
          description: 'Attraction successfully deleted'
        '404':
          description: 'Trail or attraction not found'
  /trail_attraction/{trail_id}/all:
    delete:
      operationId: 'trail_attraction.delete_all_tied_to_trail'
      tags:
        - 'trail_attraction'
      summary: 'Delete all attractions tied to a trail'
      parameters:
        - name: trail_id
          in: path
          description: 'ID of the trail'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 'All attractions successfully deleted'
        '404':
          description: 'Trail not found'
  /trail_attraction/{id}:
    get:
      operationId: 'trail_attraction.read_attractions_or_trails'
      tags:
        - 'trail_attraction'
      summary: 'Get all attractions or trails tied to a trail or attraction'
      parameters:
        - name: id
          in: path
          description: 'ID of the trail or attraction'
          required: true
          schema:
            type: integer
        - name: type
          in: query
          description: 'Type of the entity to search for'
          required: true
          schema:
            type: string
            enum:
              - trail
              - attraction
      responses:
        '200':
          description: 'Successfully retrieved list of trails or attractions'
        '400':
          description: 'Request failed, please retry.'
  /attractions:
    get:
      operationId: 'attraction.read_all'
      tags:
        - 'attractions'
      summary: Get a list of attractions
      parameters:
       - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: Successfully retrieved list of attractions
        '400':
          description: Request failed, please retry.
    post:
      operationId: 'attraction.create'
      tags:
        - 'attractions'
      summary: Create a new attraction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attraction'
      responses:
        '201':
          description: Attraction created successfully
        '400':
          description: Request failed, please retry.
  /attractions/{attraction_id}:
    get:
      operationId: 'attraction.read_one'
      tags:
        - 'attractions'
      summary: Get one attraction by ID
      parameters:
        - $ref: '#/components/parameters/attraction_id'
      responses:
        '200':
          description: Successful response, Attraction exists
        '404':
          description: Attraction not found
    patch:
      operationId: 'attraction.update'
      tags:
        - 'attractions'
      summary: Update an attraction by ID
      parameters:
        - $ref: '#/components/parameters/attraction_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attraction'
      responses:
        '200':
          description: Attraction updated successfully
        '404':
          description: Attraction not found
    delete:
      operationId: 'attraction.delete'
      tags:
        - 'attractions'
      summary: Delete an attraction by ID
      parameters:
        - $ref: '#/components/parameters/attraction_id'
      responses:
        '204':
          description: Attraction deleted successfully
        '404':
          description: Attraction not found
  /location_point:
    get:
      operationId: 'location_point.read_all'
      tags:
        - 'location_points'
      summary: Get a list of location points
      parameters:
       - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: Successfully retrieved list of location points
        '400':
          description: Request failed, please retry.
    post:
      operationId: 'location_point.create'
      tags:
        - 'location_points'
      summary: Create a new location point
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPoint'
      responses:
        '201':
          description: Location point created successfully
        '400':
          description: Request failed, please retry.
  /location_point/{location_point_id}:
    get:
      operationId: 'location_point.read_one'
      tags:
        - 'location_points'
      summary: Get one location point by ID
      parameters:
        - $ref: '#/components/parameters/location_point_id'
      responses:
        '200':
          description: Successful response, Location point exists
        '404':
          description: Location point not found
    delete:
      operationId: 'location_point.delete'
      tags:
        - 'location_points'
      summary: Delete a location point by ID
      parameters:
        - $ref: '#/components/parameters/location_point_id'
      responses:
        '204':
          description: Location point deleted successfully
        '404':
          description: Location point not found
    patch:
      operationId: 'location_point.update'
      tags:
        - 'location_points'
      summary: Update a location point by ID
      parameters:
        - $ref: '#/components/parameters/location_point_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPoint'
      responses:
        '200':
          description: Location point updated successfully
        '404':
          description: Location point not found
  /trail_locationpt:
    get:
      operationId: 'trail_locationpt.read_all'
      tags:
        - 'trail_locationpt'
      summary: Get a list of trail location points
      responses:
        '200':
          description: Successfully retrieved list of trail location points
        '400':
          description: Request failed, please retry.
    post:
      operationId: 'trail_locationpt.create'
      tags:
        - 'trail_locationpt'
      summary: Create a new trail location point
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail_locationpt'
      responses:
        '201':
          description: Trail location point created successfully
        '400':
          description: Request failed, please retry.
  /trail_locationpt/{trail_id}/{location_point_id}:
    delete:
      operationId: 'trail_locationpt.delete'
      tags:
        - 'trail_locationpt'
      summary: 'Delete one location point tied to a trail'
      parameters:
        - $ref: '#/components/parameters/trail_id'
        - $ref: '#/components/parameters/location_point_id'
      responses:
        '204':
          description: 'Location point successfully deleted'
        '404':
          description: 'Trail or location point not found'
    patch:
      operationId: 'trail_locationpt.update'
      tags:
        - 'trail_locationpt'
      summary: Update a trail location point order number
      parameters:
        - $ref: '#/components/parameters/trail_id'
        - $ref: '#/components/parameters/location_point_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_number'
      responses:
        '200':
          description: Trail location point updated successfully
        '404':
          description: Trail location point not found
  /trail_locationpt/{trail_id}/all:
    delete:
      operationId: 'trail_locationpt.delete_all_tied_to_trail'
      tags:
        - 'trail_locationpt'
      summary: 'Delete all location points tied to a trail'
      parameters:
        - name: trail_id
          in: path
          description: 'ID of the trail'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 'All location points successfully deleted'
        '404':
          description: 'Trail not found'
  /trail_locationpt/{id}:
    get:
      operationId: 'trail_locationpt.read_locationpts_or_trails'
      tags:
        - 'trail_locationpt'
      summary: 'Get all location points or trails tied to a trail or location point'
      parameters:
        - name: id
          in: path
          description: 'ID of the trail or location point'
          required: true
          schema:
            type: integer
        - name: type
          in: query
          description: 'Type of the entity to search for'
          required: true
          schema:
            type: string
            enum:
              - trail
              - location_point
      responses:
        '200':
          description: 'Successfully retrieved list of trails or location points'
        '400':
          description: 'Request failed, please retry.'
    
  
